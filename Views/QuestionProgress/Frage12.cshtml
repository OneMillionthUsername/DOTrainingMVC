@model int
@{
    ViewData["Title"] = "Frage " + Model;
}

<h2>
    Selektiere alle Prokte aus der Produkte-Tabelle, die von den
    Lieferanten Nr 3 und 7 geliefert werden oder
    die teurer als 30 € sind <br />
</h2>
@*onsubmit = "return func()" das return, verhindert, dass das Formular abgeschickt wird, wenn es false returned.*@
@using (Html.BeginForm("ValidateAnswers", "QuestionProgress", FormMethod.Get,
   new { onsubmit = "return validateForm(['select', 'from', 'where', 'and', 'or', '>='])", autocomplete = "off" }))
{
<div class="form-group">
    <div id="solutionText">
        <!--select-->
        <input type="text" name="param0" id="param0" class="my-1"/><span> * </span>
        <!--from-->
        <input type="text" name="param1" id="param1" class="my-1"/> Products <span>&nbsp;</span><br />
        <!--where-->
        <input type="text" name="param2" id="param2" class="my-1"/><span> (Lieferantennr = 3 </span>
        <!--or-->
        <input type="text" name="param3" id="param3" class="my-1"/><span> Lieferantennr = 7) </span>
        <!--and-->
        <input type="text" name="param4" id="param4" class="my-1"/><span> Einzelpreis </span>
        <!-- greater/equal -->
        <input type="text" name="param5" id="param5" class="my-1"/><span> 30 </span><br />
        <span> GO</span><br />
    </div>
    <input type="hidden" name="solutionString" id="solutionString" />
    <input type="submit" class="btn btn-primary my-2" value="Check" />
</div>
}
